<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="gconf-gconf-sources">
<refmeta>
<refentrytitle role="top_of_page">gconf-sources</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GCONF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>gconf-sources</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



                    <link linkend="GConfSource">GConfSource</link>;
enum                <link linkend="GConfSourceFlags">GConfSourceFlags</link>;
<link linkend="GConfSource">GConfSource</link>*        <link linkend="gconf-resolve-address">gconf_resolve_address</link>               (const <link linkend="gchar">gchar</link> *address,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="gconf-source-free">gconf_source_free</link>                   (<link linkend="GConfSource">GConfSource</link> *source);
                    <link linkend="GConfSources">GConfSources</link>;
<link linkend="GConfSources">GConfSources</link>*       <link linkend="gconf-sources-new-from-addresses">gconf_sources_new_from_addresses</link>    (<link linkend="GSList">GSList</link> *addresses,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GConfSources">GConfSources</link>*       <link linkend="gconf-sources-new-from-source">gconf_sources_new_from_source</link>       (<link linkend="GConfSource">GConfSource</link> *source);
<link linkend="void">void</link>                <link linkend="gconf-sources-free">gconf_sources_free</link>                  (<link linkend="GConfSources">GConfSources</link> *sources);
<link linkend="GConfValue">GConfValue</link>*         <link linkend="gconf-sources-query-value">gconf_sources_query_value</link>           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="gboolean">gboolean</link> use_schema_default,
                                                         <link linkend="gboolean">gboolean</link> *value_is_default,
                                                         <link linkend="gboolean">gboolean</link> *value_is_writable,
                                                         <link linkend="gchar">gchar</link> **schema_name,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="gconf-sources-set-value">gconf_sources_set_value</link>             (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="GConfValue">GConfValue</link> *value,
                                                         <link linkend="GConfSources">GConfSources</link> **modified_sources,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="gconf-sources-unset-value">gconf_sources_unset_value</link>           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *locale,
                                                         <link linkend="GConfSources">GConfSources</link> **modified_sources,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GSList">GSList</link>*             <link linkend="gconf-sources-all-entries">gconf_sources_all_entries</link>           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GSList">GSList</link>*             <link linkend="gconf-sources-all-dirs">gconf_sources_all_dirs</link>              (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>            <link linkend="gconf-sources-dir-exists">gconf_sources_dir_exists</link>            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="gconf-sources-remove-dir">gconf_sources_remove_dir</link>            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="gconf-sources-set-schema">gconf_sources_set_schema</link>            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *schema_key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>            <link linkend="gconf-sources-sync-all">gconf_sources_sync_all</link>              (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GConfMetaInfo">GConfMetaInfo</link>*      <link linkend="gconf-sources-query-metainfo">gconf_sources_query_metainfo</link>        (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="GConfValue">GConfValue</link>*         <link linkend="gconf-sources-query-default-value">gconf_sources_query_default_value</link>   (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="gboolean">gboolean</link> *is_writable,
                                                         <link linkend="GError">GError</link> **err);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GConfSource" role="struct"/>GConfSource</title>
<indexterm><primary>GConfSource</primary></indexterm><programlisting>typedef struct {
  guint flags;
  gchar* address;
  GConfBackend* backend;
} GConfSource;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GConfSourceFlags" role="enum"/>enum GConfSourceFlags</title>
<indexterm><primary>GConfSourceFlags</primary></indexterm><programlisting>typedef enum {
  /* These are an optimization to avoid calls to
   * the writable/readable methods in the backend
   * vtable
   */
  GCONF_SOURCE_ALL_WRITEABLE = 1 &lt;&lt; 0,
  GCONF_SOURCE_ALL_READABLE = 1 &lt;&lt; 1,
  GCONF_SOURCE_NEVER_WRITEABLE = 1 &lt;&lt; 2, 
  GCONF_SOURCE_ALL_FLAGS = ((1 &lt;&lt; 0) | (1 &lt;&lt; 1))
} GConfSourceFlags;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gconf-resolve-address" role="function"/>gconf_resolve_address ()</title>
<indexterm><primary>gconf_resolve_address</primary></indexterm><programlisting><link linkend="GConfSource">GConfSource</link>*        gconf_resolve_address               (const <link linkend="gchar">gchar</link> *address,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>address</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-source-free" role="function"/>gconf_source_free ()</title>
<indexterm><primary>gconf_source_free</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_source_free                   (<link linkend="GConfSource">GConfSource</link> *source);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GConfSources" role="struct"/>GConfSources</title>
<indexterm><primary>GConfSources</primary></indexterm><programlisting>typedef struct {
  GList* sources;
} GConfSources;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gconf-sources-new-from-addresses" role="function"/>gconf_sources_new_from_addresses ()</title>
<indexterm><primary>gconf_sources_new_from_addresses</primary></indexterm><programlisting><link linkend="GConfSources">GConfSources</link>*       gconf_sources_new_from_addresses    (<link linkend="GSList">GSList</link> *addresses,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>addresses</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-new-from-source" role="function"/>gconf_sources_new_from_source ()</title>
<indexterm><primary>gconf_sources_new_from_source</primary></indexterm><programlisting><link linkend="GConfSources">GConfSources</link>*       gconf_sources_new_from_source       (<link linkend="GConfSource">GConfSource</link> *source);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-free" role="function"/>gconf_sources_free ()</title>
<indexterm><primary>gconf_sources_free</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_sources_free                  (<link linkend="GConfSources">GConfSources</link> *sources);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-query-value" role="function"/>gconf_sources_query_value ()</title>
<indexterm><primary>gconf_sources_query_value</primary></indexterm><programlisting><link linkend="GConfValue">GConfValue</link>*         gconf_sources_query_value           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="gboolean">gboolean</link> use_schema_default,
                                                         <link linkend="gboolean">gboolean</link> *value_is_default,
                                                         <link linkend="gboolean">gboolean</link> *value_is_writable,
                                                         <link linkend="gchar">gchar</link> **schema_name,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locales</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>use_schema_default</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value_is_default</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value_is_writable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>schema_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-set-value" role="function"/>gconf_sources_set_value ()</title>
<indexterm><primary>gconf_sources_set_value</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_sources_set_value             (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="GConfValue">GConfValue</link> *value,
                                                         <link linkend="GConfSources">GConfSources</link> **modified_sources,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>modified_sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-unset-value" role="function"/>gconf_sources_unset_value ()</title>
<indexterm><primary>gconf_sources_unset_value</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_sources_unset_value           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *locale,
                                                         <link linkend="GConfSources">GConfSources</link> **modified_sources,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locale</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>modified_sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-all-entries" role="function"/>gconf_sources_all_entries ()</title>
<indexterm><primary>gconf_sources_all_entries</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             gconf_sources_all_entries           (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locales</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-all-dirs" role="function"/>gconf_sources_all_dirs ()</title>
<indexterm><primary>gconf_sources_all_dirs</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             gconf_sources_all_dirs              (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-dir-exists" role="function"/>gconf_sources_dir_exists ()</title>
<indexterm><primary>gconf_sources_dir_exists</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gconf_sources_dir_exists            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-remove-dir" role="function"/>gconf_sources_remove_dir ()</title>
<indexterm><primary>gconf_sources_remove_dir</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_sources_remove_dir            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *dir,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dir</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-set-schema" role="function"/>gconf_sources_set_schema ()</title>
<indexterm><primary>gconf_sources_set_schema</primary></indexterm><programlisting><link linkend="void">void</link>                gconf_sources_set_schema            (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> *schema_key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>schema_key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-sync-all" role="function"/>gconf_sources_sync_all ()</title>
<indexterm><primary>gconf_sources_sync_all</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gconf_sources_sync_all              (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-query-metainfo" role="function"/>gconf_sources_query_metainfo ()</title>
<indexterm><primary>gconf_sources_query_metainfo</primary></indexterm><programlisting><link linkend="GConfMetaInfo">GConfMetaInfo</link>*      gconf_sources_query_metainfo        (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gconf-sources-query-default-value" role="function"/>gconf_sources_query_default_value ()</title>
<indexterm><primary>gconf_sources_query_default_value</primary></indexterm><programlisting><link linkend="GConfValue">GConfValue</link>*         gconf_sources_query_default_value   (<link linkend="GConfSources">GConfSources</link> *sources,
                                                         const <link linkend="gchar">gchar</link> *key,
                                                         const <link linkend="gchar">gchar</link> **locales,
                                                         <link linkend="gboolean">gboolean</link> *is_writable,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>sources</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>locales</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_writable</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>





<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
